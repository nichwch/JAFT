{"version":3,"sources":["TimerUtils.js","Components/Timer/Timer.js","Components/Session/Session.js","Components/History/History.js","App.js","Home/Home.js","Home/Features.js","Main.js","serviceWorker.js","index.js"],"names":["getTimeDisplay","date","mode","hours","Math","floor","getTime","minutes","seconds","milliseconds","hourDisplay","minuteDisplay","secondDisplay","millisecondDisplay","toString","substring","Timer","require","props","Date","time","useState","tagFormValue","setTagFormValue","focusVal","setFocusVal","dateDisplay","sessionDisplay","stamps","length","stampStart","sessionLength","stamp","toggle","on","controls","stop","start","spaceToggle","e","code","useEffect","document","addEventListener","removeEventListener","className","currentTag","focus","onClick","name","window","confirm","reset","style","marginTop","tags","map","tag","i","key","setTag","removeTag","placeholder","value","onChange","target","type","checked","trim","newTag","addTag","Session","slice","initTime","set_currentTag","sortByMode","set_sortByMode","push","bars","timeTotals","Map","distractionArr","focusArr","has","arr","get","set","barDisplay","el","vis","width","backgroundColor","borderRightColor","visibility","tagArr","total","avg","reduce","acc","cv","distractionTotal","focusTotal","distractionAvg","focusAvg","infoContent","Fragment","infoDisplay","buttonDisplay","moment","themes","data","flavor_text","History","sessions","setSessions","display","setDisplay","flavorText","set_flavorText","loadSessions","forage","iterate","val","iterationNumber","then","valObj","format","stopPropagation","removeItem","color","theme","documentElement","setProperty","setTheme","localforage","TIMER","DEFAULT_TAGS","App","resetState","startTime","state","setState","setItem","index","splice","startTimer","valueOf","now","timer","setInterval","oldTag","pop","stopTimer","clearInterval","resetTimer","store","createInstance","this","getItem","content","prompt","alert","hash","random","substr","React","Component","Home","to","href","src","Features","Main","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5505d755.chunk.js","sourcesContent":["const getTimeDisplay = (date,mode) =>\n{\n  //Is this elegant or hideous? I can't tell\n\n  let hours = Math.floor(date.getTime()/3600000);\n  let minutes = Math.floor((date.getTime()%3600000)/60000);\n  let seconds = Math.floor(((date.getTime()%3600000)%60000)/1000);\n  let milliseconds = Math.floor((((date.getTime()%3600000)%60000)%1000));\n\n  if(mode===\"numbers\")\n  {\n    let hourDisplay = \"\";\n    let minuteDisplay = \"\";\n    let secondDisplay = \"\";\n    let millisecondDisplay = \"\";\n\n\n    if(milliseconds>=10) millisecondDisplay = milliseconds.toString().substring(0,2);\n    else millisecondDisplay = \"0\"+milliseconds.toString();\n\n    if(minutes===0 && hours===0) secondDisplay = seconds.toString() + \":\";\n    else\n    {\n      if(seconds>=10) secondDisplay = seconds.toString() + \":\";\n      else secondDisplay = \"0\"+seconds.toString() + \":\";\n    }\n\n    if(hours===0) minuteDisplay = minutes.toString() + \":\";\n    else\n    {\n      if(minutes>=10) minuteDisplay = minutes.toString() + \":\";\n      else minuteDisplay = \"0\"+minutes.toString() + \":\";\n\n    }\n\n    hourDisplay = hours.toString() + \":\";\n\n    if(hours>0)\n    {\n      //don't display milliseconds (no space)\n      millisecondDisplay = \"\";\n      //get rid of trailing semicolon on seconds\n      if(seconds>=10) secondDisplay = seconds.toString();\n      else secondDisplay = \"0\"+seconds.toString();\n    }\n\n    //if hours is 0, don't show it\n    if(hours===0) hourDisplay = \"\";\n    //if minutes is 0, don't show it\n    if(minutes===0 && hours===0) minuteDisplay = \"\";\n\n    return \"\"+hourDisplay+minuteDisplay+secondDisplay+millisecondDisplay\n  }\n\n  else if(mode===\"text\")\n  {\n    let hourDisplay = \"\";\n    let minuteDisplay = \"\";\n    let secondDisplay = \"\";\n\n    if(hours===0) hourDisplay=\"\";\n    else if(hours===1) hourDisplay=`${hours} hour`;\n    else hourDisplay=`${hours} hours`;\n\n    if(minutes===0) minuteDisplay=\"\";\n    else if(minutes===1) minuteDisplay=`${minutes} minute`;\n    else minuteDisplay=`${minutes} minutes`;\n\n    if(seconds===0) secondDisplay=\"\";\n    else if(seconds===1) secondDisplay=`${seconds} second`;\n    else secondDisplay=`${seconds} seconds`;\n\n\n    if(hourDisplay!==\"\" && (minuteDisplay!==\"\" || secondDisplay!==\"\")) hourDisplay=hourDisplay+\", \";\n\n    if(minuteDisplay!==\"\" && secondDisplay!==\"\") minuteDisplay=minuteDisplay+\", \";\n\n    if(seconds===0 && minutes===0 && hours===0)\n    {\n      if(milliseconds===0) return \"0 seconds\";\n      return \"<1 second\";\n    }\n\n    return \"\"+hourDisplay+minuteDisplay+secondDisplay;\n  }\n\n  else if(mode===\"numbers_full\")\n  {\n    let hourDisplay = \"\";\n    let minuteDisplay = \"\";\n    let secondDisplay = \"\";\n\n\n    if(seconds>=10) secondDisplay = seconds.toString();\n    else secondDisplay = \"0\"+seconds.toString();\n\n    if(minutes>=10) minuteDisplay = minutes.toString() + \":\";\n    else minuteDisplay = \"0\"+minutes.toString() + \":\";\n\n    if(hours>=10) hourDisplay = hours.toString() + \":\";\n    else hourDisplay = \"0\"+hours.toString() + \":\";\n\n    return \"\"+hourDisplay+minuteDisplay+secondDisplay\n  }\n  else\n  {\n    return \"BAD_CALL\";\n  }\n\n}\n\n\n\nexport {getTimeDisplay}\n","import React,{useState,useEffect} from \"react\";\nimport \"./Timer.css\";\nimport {getTimeDisplay} from \"../../TimerUtils\";\n\nvar moment = require('moment');\n\nconst Timer = (props) =>\n{\n\n\n\n  let date = new Date(props.time);\n\n  let [tagFormValue,setTagFormValue] = useState(\"\");\n  //true means its a distraction, false means its not\n  let [focusVal,setFocusVal] = useState(false);\n\n  let dateDisplay = getTimeDisplay(date,\"numbers\");\n\n  let sessionDisplay = \"0:00\";\n  if(props.stamps.length > 0)\n  {\n    let stampStart = props.stamps[props.stamps.length-1];\n    let sessionLength = props.time - stampStart.stamp;\n\n    sessionDisplay = getTimeDisplay(new Date(sessionLength),\"numbers\");\n  }\n\n  let toggle = () => {\n    if(props.on) props.controls.stop();\n    else props.controls.start();\n  }\n\n  let spaceToggle = (e) => {\n     if(e.code === \"Space\")\n     {\n       toggle();\n       //doesn't work for some reason\n       // e.preventDefault();\n       // return false;\n     }\n   };\n\n  useEffect(()=>{\n    document.addEventListener(\"keyup\",spaceToggle);\n    return(\n      ()=>{\n        document.removeEventListener(\"keyup\",spaceToggle);\n      }\n    );\n  },[props.on]);\n\n\n  return (\n    <div className=\"innerAppContainer\">\n        <div className = {props.currentTag.focus?\"circleTimerContainer\":\"circleTimerContainer distracted\"} onClick={()=>{toggle()}}>\n            <div className = \"tagSubtitle\">\n              Total\n            </div>\n            <div className = \"tagSubtitle\">\n              {dateDisplay}\n            </div>\n            <div className = \"timerTime\">\n              {sessionDisplay}\n            </div>\n            <div className = \"tagTitle\">\n              {props.currentTag.name}\n            </div>\n            {props.currentTag.focus?null:\n            <div className = \"distractedTitle\">\n              DISTRACTED\n            </div>\n            }\n        </div>\n        {\n          ((!props.on)&&(props.time>0))?\n          <button className={props.currentTag.focus?\"resetButton\":\"resetButton distracted\"}\n          onClick=\n          {()=>{\n            if(window.confirm(\"Reset timer? This will erase this session's data.\"))\n            {\n              props.controls.reset()\n            }\n\n          }\n          }>\n          reset</button>\n          :\n          <div style={{marginTop:\"66px\"}}></div>\n        }\n        <div className=\"timerButtonContainer\">\n        {props.tags.map((tag,i)=>{return (\n          <span className=\"tagButtonCoupler\" key={i}>\n          <button className={tag.focus?\"tagButtonName\":\"tagButtonName distracted\"} key={i} onClick={()=>{props.setTag(tag)}}>\n            {tag.name}\n          </button>\n          <button\n            className={tag.focus?\"tagButtonDelete\":\"tagButtonDelete distracted\"}\n            onClick={\n              ()=>{\n                if(window.confirm(\"Delete this tag?\")) props.removeTag(i)\n              }\n            }\n\n          >X\n          </button>\n          </span>\n        )})}\n        <br/>\n        <input\n          className=\"tagForm\"\n          placeholder=\"add a new category...\"\n          value={tagFormValue}\n          onChange={(e)=>{setTagFormValue(e.target.value)}}\n        />\n        <span className=\"focusCheckBoxCaption\">\n        Distraction?\n        </span>\n        <input\n            type=\"checkbox\"\n            className={focusVal?\"focusCheckBox checked\":\"focusCheckBox\"}\n            checked={focusVal}\n            onChange={\n              (e)=>\n              {\n                setFocusVal(e.target.checked)\n              }\n            } />\n        <button className={props.currentTag.focus?\"submitTagForm\":\"submitTagForm distracted\"} onClick={\n          ()=>{\n            if(tagFormValue.trim().length>0)\n            {\n              let newTag = {\n                name:tagFormValue,\n                focus:!focusVal,\n              }\n              props.addTag(newTag);\n              setTagFormValue(\"\");\n            }\n          }\n        }>+</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Timer;\n","import React,{useState,useEffect} from \"react\";\nimport \"./Session.css\";\nimport {getTimeDisplay} from \"../../TimerUtils\";\n\nconst Session = (props) =>\n{\n  let stamps = props.stamps.slice();\n\n  // let [initTime,setInitTime] = useState(0);\n  // let [initTime,setInitTime] = useState(props.time);\n  let initTime = props.time;\n  let [currentTag,set_currentTag] = useState(\"\");\n\n  const NA = \"NA\";\n  const FOCUS = \"FOCUS\";\n  const DISTRACTIONS = \"DISTRACTIONS\";\n  const ALL = \"ALL\";\n\n  let [sortByMode,set_sortByMode] = useState(ALL);\n\n  // useEffect(\n  //   ()=>{\n  //   setInitTime(props.time);\n  // },[]\n  // );\n\n  if(stamps.length>0)\n  {\n    stamps.push(\n      {\n        tag:stamps[stamps.length-1].tag,\n        start:false,\n        stamp:initTime\n      }\n    )\n  }\n\n\n\n  let bars = [];\n\n  for(let i = 1; i<stamps.length;i+=2)\n  {\n    let start = stamps[i-1].stamp;\n    let end = stamps[i].stamp;\n    let length = end-start;\n    let name = stamps[i].tag.name;\n    let focus = stamps[i].tag.focus;\n    if(bars.length>0 && bars[bars.length-1].name === name) bars[bars.length-1].time+=length;\n    else if(length>0) bars.push({time:length,name:name,focus:focus});\n\n  }\n\n  let timeTotals = new Map();\n  let distractionArr = [];\n  let focusArr = [];\n\n  for(let i = 0; i<bars.length;i++)\n  {\n    if(timeTotals.has(bars[i].name))\n    {\n      let arr = timeTotals.get(bars[i].name);\n      arr.push(bars[i].time);\n      timeTotals.set(bars[i].name,arr);\n    }\n    else\n    {\n      timeTotals.set(bars[i].name,[bars[i].time]);\n    }\n    if(bars[i].focus) focusArr.push(bars[i].time);\n    else if(!bars[i].focus) distractionArr.push(bars[i].time);\n  }\n\n\n  let barDisplay = (<div className=\"barWrapper\">\n      {bars.map(\n          (el,i)=>{\n            let vis = \"visible\";\n\n            if(sortByMode===NA)\n            {\n              if(el.name===currentTag) vis = \"visible\";\n              else vis = \"hidden\";\n            }\n            else if(sortByMode===ALL) vis = \"visible\";\n            else if(sortByMode===FOCUS)\n            {\n              if(el.focus) vis = \"visible\";\n              else vis = \"hidden\";\n            }\n            else if(sortByMode===DISTRACTIONS)\n            {\n              if(!el.focus) vis = \"visible\";\n              else vis = \"hidden\";\n            }\n\n\n            return(<span key={i} className=\"barElement\" style={{width:\n              `calc(${(((el.time/initTime)*100)+\"% - 3px\")})`,\n              backgroundColor:(el.focus?\"var(--focus-color)\":\"var(--distracted-color)\"),\n              borderRightColor:(el.focus?\"var(--focus-hover)\":\"var(--distracted-hover)\"),\n              visibility:vis,\n              }}>\n\n              </span>\n            )\n          }\n        )}\n    </div>\n  )\n\n\n  let tagArr = timeTotals.get(currentTag);\n\n  let total = \"\";\n  let avg = \"\";\n  if(tagArr)\n  {\n    total = tagArr.reduce( (acc,cv)=>{ return acc+cv } );\n    avg = total/tagArr.length;\n  }\n\n  let distractionTotal,focusTotal = \"\";\n  let distractionAvg,focusAvg = \"\";\n\n  distractionTotal = distractionArr.reduce( (acc,cv)=>{ return acc+cv },0 );\n  distractionAvg = (distractionTotal/distractionArr.length)||0;\n\n  focusTotal = focusArr.reduce( (acc,cv)=>{ return acc+cv },0  );\n  focusAvg = (focusTotal/focusArr.length)||0;\n\n\n\n  let infoContent = null;\n\n  if(bars.length===0) infoContent = (<React.Fragment><p>No data (Timer not started)</p><br/><br/></React.Fragment>)\n  else if(sortByMode===ALL) infoContent = (<React.Fragment><p>Select a tag to view its information.</p><br/><br/></React.Fragment>)\n  else if(sortByMode===FOCUS)\n    infoContent = (\n      <React.Fragment>\n        <p>Displaying all focus sessions\n        <br/>Total Time: {getTimeDisplay(new Date(focusTotal),\"text\")}\n        <br/>Average Session Length: {getTimeDisplay(new Date(focusAvg),\"text\")}</p>\n      </React.Fragment>\n    )\n  else if(sortByMode===DISTRACTIONS)\n    infoContent = (\n      <React.Fragment>\n        <p>Displaying all distraction sessions\n        <br/>Total Time: {getTimeDisplay(new Date(distractionTotal),\"text\")}\n        <br/>Average Session Length: {getTimeDisplay(new Date(distractionAvg),\"text\")}</p>\n      </React.Fragment>\n    )\n  else if(sortByMode===NA)\n  {\n    infoContent = (\n      <React.Fragment>\n        <p>{currentTag}\n        <br/>Total Time: {getTimeDisplay(new Date(total),\"text\")}\n        <br/>Average Session Length: {getTimeDisplay(new Date(avg),\"text\")}</p>\n      </React.Fragment>\n    )\n  }\n\n  let infoDisplay = (\n    <React.Fragment>\n    {infoContent}\n    </React.Fragment>\n  )\n\n  let buttonDisplay = (\n    <React.Fragment>\n      <button\n           className={\"sessionTagButton\"}\n           onClick={\n             ()=>{\n               set_currentTag(\"\");\n               set_sortByMode(ALL);\n             }\n           }\n      >\n        Show All\n      </button>\n\n      <button\n           className={\"sessionTagButton\"}\n           onClick={\n             ()=>{\n               set_currentTag(\"\");\n               set_sortByMode(FOCUS);\n             }\n           }\n      >\n        Only Focus\n      </button>\n\n      <button\n           className={\"sessionTagButton distracted\"}\n           onClick={\n             ()=>{\n               set_currentTag(\"\");\n               set_sortByMode(DISTRACTIONS);\n             }\n           }\n      >\n        Only Distractions\n      </button>\n      <br/>\n      <br/>\n      {props.tags.map(\n        (tag,i)=>\n        {\n          if(timeTotals.has(tag.name))\n          {\n            return(\n            <button key={i}\n                 className={tag.focus?\"sessionTagButton\":\"sessionTagButton distracted\"}\n                 onClick={\n                   ()=>{\n                     set_currentTag(tag.name);\n                     set_sortByMode(NA);\n                   }\n                 }\n            >\n              {tag.name}\n            </button>\n            )\n          }\n          else return null;\n        }\n      )}\n    </React.Fragment>\n  )\n\n\n  return (\n    <React.Fragment>\n    <div className=\"barChartContainer\">\n    {barDisplay}\n    </div>\n    <div className=\"sessionInfoContainer\">\n    {infoDisplay}\n    </div>\n    <div className=\"sessionBottomContainer\">\n    {buttonDisplay}\n    </div>\n    </React.Fragment>\n  )\n}\n\nexport default Session;\n","import React,{useState,useEffect} from \"react\";\nimport Session from \"../Session/Session\";\nimport \"./History.css\";\n\nconst moment = require(\"moment\");\n\nconst themes =\n[\n\n    {\n      name:\"Default\",\n      data:[\n        [\"--transparent-grey\",\"rgba(30,30,30,0.8)\"],\n        [\"--focus-color\",\"#FF848B\"],\n        [\"--focus-hover\",\"#FF535B\"],\n        [\"--distracted-color\",\"#AC3539\"],\n        [\"--distracted-hover\",\"#960000\"],\n        [\"--field-gray\",\"#d6d6d6\"],\n        [\"--buttonSkin\",'rgba(150,150,150,0.8)'],\n        [\"--background\",'rgba(0,0,0,0)'],\n      ],\n      flavor_text:\"Classic JAFT.\",\n    },\n    {\n      name:\"Coffee Shop\",\n      data:[\n        [\"--transparent-grey\",\"rgba(30,30,30,0.8)\"],\n        [\"--focus-color\",\"#c7fac3\"],\n        [\"--focus-hover\",\"#b5e3b1\"],\n        [\"--distracted-color\",\"#82a37f\"],\n        [\"--distracted-hover\",\"#668063\"],\n        [\"--field-gray\",\"#d6d6d6\"],\n        [\"--buttonSkin\",'url(/woodtexture.jpg)'],\n        [\"--background\",'url(/coffee_shop.gif)'],\n      ],\n      flavor_text:\"Coffee Shop Vibes. Pair with a nice jazz or lofi playlist.\",\n    },\n    {\n      name:\"Vaporwave\",\n      data:[\n        [\"--transparent-grey\",\"rgba(30,30,30,0.8)\"],\n        [\"--focus-color\",\"#b94aec\"],\n        [\"--focus-hover\",\"#8234a6\"],\n        [\"--distracted-color\",\"#a175b5\"],\n        [\"--distracted-hover\",\"#593b75\"],\n        [\"--field-gray\",\"#d6d6d6\"],\n        [\"--buttonSkin\",\"rgba(150,150,150,0.8)\"],\n        [\"--background\",'url(/vaporwave1.gif)'],\n      ],\n      flavor_text:\"v a p o r w a v e a e s t h e t i c s\",\n    },\n]\n\nconst setTheme = (theme) =>\n{\n  let style = document.documentElement.style;\n\n  for(let i=0;i<theme.data.length;i++)\n  {\n      style.setProperty(theme.data[i][0], theme.data[i][1]);\n  }\n}\n\n\n\nconst History = (props) =>\n{\n  let [sessions,setSessions] = useState([]);\n  let [display,setDisplay] = useState(null);\n  let [flavorText, set_flavorText] = useState(\"\");\n\n  const loadSessions = ()=>{\n    let arr = [];\n    props.forage.iterate(\n      (val,key,iterationNumber)=>\n      {\n        if(key===\"tags\") return;\n        arr.push(\n          {\n            name:val.name,\n            stamps:val.stamps,\n            date:val.date,\n            time:val.time,\n            tags:val.tags,\n            key:key,\n          }\n        );\n      }\n    ).then(\n      ()=>{setSessions(arr);}\n    )\n  }\n\n  useEffect(()=>{\n    loadSessions();\n  },[props.forage]);\n\n\n\n  return (\n    <React.Fragment>\n    {\n      display===null?\n      <React.Fragment>\n      <div className=\"historyContainer\">\n        {\n          sessions.map(\n            (valObj,i) =>\n            {\n              let date = moment(valObj.date).format(\"dddd, MM/DD/YYYY, h:mm a\");\n              return(\n                <div key={i}\n                        className=\"sessionListing\"\n                        onClick={\n                          ()=>{\n                            setDisplay(valObj)\n                          }\n                        }\n                >\n                  <div>\n                  <span className=\"listingTitle\">\n                  {valObj.name}\n                  </span>\n                  <button className=\"listingDeleteButton\"\n                  onClick={\n                    (e)=>{\n                      e.stopPropagation();\n                      if(window.confirm(\"Are you sure? This cannot be undone\"))\n                        {\n                          props.forage.removeItem(valObj.key)\n                          .then(\n                            ()=>{\n                            loadSessions();\n                            }\n                          )\n                        }\n                      }\n\n                  }\n                  >\n                  X\n                  </button>\n                  <br/>\n                  <span>{date}</span>\n                  </div>\n\n                </div>\n              )\n\n            }\n          )\n        }\n        {sessions.length>0?null:<p style={{color:\"white\"}}>No past sessions to show.</p>}\n      </div>\n      <div className=\"settingsContainer\">\n        <h1>Themes</h1>\n        <p>{flavorText}</p>\n        {\n          themes.map((theme,i)=>{\n            return(\n              <button\n                key={i}\n                onClick={\n                  ()=>{\n                    setTheme(theme)\n                    set_flavorText(theme.flavor_text)\n                  }\n                }\n              >\n              {theme.name}\n              </button>\n            )\n          })\n        }\n      </div>\n      </React.Fragment>\n      :\n      <React.Fragment>\n        <div className = \"historyBar\">\n        <button className = \"barBackButton\" onClick={()=>{setDisplay(null)}}>\n        back\n        </button>\n        <br/>\n        <div className=\"barTitle\">\n        {display.name}\n        </div>\n        <div className=\"barSubtitle\">\n        {moment(display.date).format(\"MM/DD/YYYY, h:mm a\")}\n        </div>\n        </div>\n        <Session\n          stamps={display.stamps}\n          time={display.time}\n          tags={display.tags}\n        />\n      </React.Fragment>\n    }\n\n    </React.Fragment>\n  )\n}\n\nexport default History;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Timer from \"./Components/Timer/Timer\";\nimport Session from \"./Components/Session/Session\";\nimport History from \"./Components/History/History\";\n\nconst localforage = require(\"localforage\");\nconst moment = require(\"moment\");\n\nconst TIMER = \"TIMER\";\nconst SESSION = \"SESSION\";\nconst HISTORY = \"HISTORY\";\n\nconst DEFAULT_TAGS = [\n    {\n      name:\"Focus\",\n      focus:true,\n    },\n    {\n      name:\"FB\",\n      focus:false,\n    },\n    {\n      name:\"Twitter\",\n      focus:false,\n    },\n    {\n      name:\"Medium\",\n      focus:false,\n    },\n];\n\n\nclass App extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = this.resetState();\n    this.state.tags = []\n    this.state.currentTag = {name:\"Focus\",focus:true,};\n    this.state.mode = TIMER;\n\n    var store = localforage.createInstance({\n      name: \"JAFT\"\n    });\n    this.state.forage = store;\n  }\n\n  componentDidMount()\n  {\n    this.state.forage.getItem(\"tags\")\n    .then(\n      (value)=>{\n        if(value!==null) this.setState({tags:value});\n        else this.setState({tags:DEFAULT_TAGS});\n\n      }\n    )\n  }\n\n\n  resetState = () =>{\n    return(\n      {\n        startTime:0,\n        time:0,\n        on:false,\n        stamps:[],\n      }\n    );\n  }\n\n  addTag = (newTag) =>{\n    let tags = this.state.tags;\n    tags.push(newTag);\n    this.setState({\n      tags:tags\n    },\n    ()=>{\n      this.state.forage.setItem(\"tags\",this.state.tags);\n    }\n  );\n  }\n\n  removeTag = (index)=>{\n    let tags = this.state.tags;\n    tags.splice(index,1);\n    this.setState({\n      tags:tags\n    },\n    ()=>{\n      this.state.forage.setItem(\"tags\",this.state.tags);\n    });\n  }\n\n  //not idempotent\n  startTimer = () =>\n  {\n    let stamps;\n    if(this.state.time == 0)\n    {\n      stamps = this.state.stamps;\n      stamps.push({tag:this.state.currentTag,start:true,stamp:this.state.time.valueOf()});\n\n      this.setState({\n        stamps:stamps,\n        currentTag:this.state.currentTag\n      });\n    }\n    this.setState({\n      startTime:Date.now()-this.state.time,\n      time:this.state.time,\n      on:true,\n    });\n    this.timer = setInterval(()=>{\n      //useful millisecond values to add on for testing\n      //35990000 (9 hours 59 minutes 50 seconds)\n      //590000 (9 minutes 50 seconds)\n      this.setState({\n        time:moment(Date.now()).valueOf() - moment(this.state.startTime).valueOf(),\n      });\n    },1);\n  }\n\n\n  setTag = (newTag) =>\n  {\n    let oldTag = this.state.currentTag;\n    if(oldTag.name!==newTag.name || oldTag.focus!==newTag.focus)\n    {\n      let stamps = this.state.stamps;\n\n      if(!this.state.on)\n      {\n        if(stamps.length === 0)\n        {\n          this.setState({\n            currentTag:newTag\n          });\n          return;\n        }\n        else if(stamps[stamps.length-1].stamp === this.state.time)\n        {\n          stamps.pop();\n          stamps.push({tag:newTag,start:true,stamp:this.state.time});\n          this.setState({\n            stamps:stamps,\n            currentTag:newTag\n          });\n          return;\n        }\n\n      }\n      //close the previous tag\n      stamps.push({tag:oldTag,start:false,stamp:this.state.time});\n      //open the new tag\n      stamps.push({tag:newTag,start:true,stamp:this.state.time});\n\n      this.setState({\n        stamps:stamps,\n        currentTag:newTag\n      });\n    }\n\n  }\n\n  //idempotent\n  stopTimer = () => {\n    this.setState({\n      on:false,\n    })\n    clearInterval(this.timer);\n  }\n\n  resetTimer = () => {\n    this.setState(this.resetState());\n  }\n\n\n  render()\n  {\n    let content = (<React.Fragment>\n      <Timer\n      controls={{start:this.startTimer,stop:this.stopTimer,reset:this.resetTimer}}\n      time={this.state.time}\n      on={this.state.on}\n      tags={this.state.tags}\n      stamps={this.state.stamps}\n      setTag={this.setTag}\n      removeTag={this.removeTag}\n      addTag={this.addTag}\n      currentTag={this.state.currentTag}\n      />\n      </React.Fragment>);\n    if(this.state.mode===TIMER)\n    {\n      content = content;\n    }\n    else if(this.state.mode===SESSION)\n    {\n      content = (<React.Fragment>\n                    <Session\n                      stamps={this.state.stamps}\n                      time={this.state.time}\n                      tags={this.state.tags}\n                    />\n                 </React.Fragment>);\n    }\n    else if(this.state.mode===HISTORY)\n    {\n      content = (<React.Fragment><History forage={this.state.forage}/></React.Fragment>);\n    }\n    return (<React.Fragment>\n      <div className=\"background\">\n      </div>\n      <div className=\"appContainer\">\n        <div className=\"appNav\">\n          <button className={this.state.mode===TIMER?\"leftNav selected\":\"leftNav\"} onClick={()=>{this.setState({mode:TIMER})}}>\n            Timer\n          </button>\n          <button className={this.state.mode===SESSION?\"centralNav selected\":\"centralNav\"} onClick={()=>{this.setState({mode:SESSION})}}>\n            Session\n          </button>\n          <button className={this.state.mode===HISTORY?\"centralNav selected\":\"centralNav\"} onClick={()=>{this.setState({mode:HISTORY})}}>\n            History\n          </button>\n          <button className=\"rightNav\"\n          onClick={\n            ()=>{\n              this.stopTimer();\n              var name = window.prompt(\"Enter a name for your session. Note: This will end your session.\");\n              if(name===null) return;\n              else if(name.trim().length===0)\n              {\n                window.alert(\"Please enter a full name\");\n              }\n              else\n              {\n                let hash = Math.random()\n                  .toString(36)\n                  .substr(2, 9);\n\n                this.state.forage.setItem(hash,\n                  {\n                    name:name,\n                    stamps:this.state.stamps,\n                    date:new Date(),\n                    time:this.state.time,\n                    tags:this.state.tags\n                  }\n                )\n                this.resetTimer();\n              }\n\n\n              //needed params\n              // name\n              // stamps={this.state.stamps}\n              // time={this.state.time}\n              // tags={this.state.tags}\n            }\n          }\n\n          >\n            Save\n          </button>\n        </div>\n\n        {content}\n      </div>\n      </React.Fragment>)\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./Home.css\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      <div className=\"homeContainer\">\n        <h1 className=\"title1\">JAFT</h1>\n        <h4 className=\"title2\">Just Another Focus Timer</h4>\n        <br />\n\n        <Link to=\"/timer\" className=\"openButton\">\n          Open App\n        </Link>\n        <span className=\"homeTagContainer\">\n          <span className=\"homeTags\">\n            <a\n              href=\"https://medium.com/@nichwch/what-is-jaft-f543a4fad9d7\"\n              className=\"homeTagLink\"\n            >\n              design philosophy\n            </a>\n          </span>\n          {/*<span className=\"homeTags\">\n            <Link to=\"/features\" className=\"homeTagLink\">\n              planned features\n            </Link>\n          </span>*/}\n          <span className=\"homeTags\">\n            <a href=\"http://nicholaschen.io/\" className=\"homeTagLink\">\n              my website\n            </a>\n          </span>\n          <span className=\"homeTags\">\n            <a href=\"mailto:nichwch@gmail.com\" className=\"homeTagLink\">\n              contact me\n            </a>\n          </span>\n          <span className=\"homeTags\">\n            <a\n              href=\"http://yananotes.com/\"\n              className=\"homeTagLink\"\n            >\n              YANA notes\n            </a>\n          </span>\n        </span>\n        <h3 className=\"title3\">JAFT is for staying focused</h3>\n        <p>\n          Use the timer to stay mindful of when you're focused, and when you're distracted. Create your own categories to track.\n        </p>\n        <h3 className=\"title3\">JAFT is lenient</h3>\n        <p>\n          \"Focus\" apps that block distractions don't work. The internet is full of distractions, but it's also a useful tool.\n          <br/><br/>\n          Say you're a writer doing research. How is your blocker going to distinguish between articles you're using for research, and articles you're being\n          distracted by? The low-hanging fruit is to block Facebook, Reddit, your obvious culprits. But what if you're wasting your time reading long-form\n          New Yorker articles that, while interesting, have nothing to do with the article you're writing?\n          <br/><br/>\n          A better solution is to be mindful of <b>when</b> you're distracted.\n          <img src=\"/how_to.jpg\" width=\"100%\">\n          </img>\n        </p>\n\n        <h3 className=\"title3\">JAFT is customizable</h3>\n        <p>\n          Most time trackers allow you to keep track of rough, pre-made categories -\n          how much time you spend working, sleeping, exercizing, etc.\n          <br/><br/>\n          What if you want to track how much time you spend debugging, or searching for files?\n          Or how much time you spend spacing out? There's no way an automatic time tracker can keep\n          track of these categories.\n          <br/><br/>\n          JAFT allows you to define your own custom categories, and for you to manually track them.\n\n        </p>\n\n        <h3 className=\"title3\">JAFT is for me</h3>\n        <p>\n          I struggle with staying focused. So, I made this app to help myself with that.\n          <br />\n          <br />\n          This is <b>my</b> focus timer. The design choices will be weird\n          because it's being designed for me and my idiosyncrasies. Just keep\n          that in mind.\n          <br />\n          <br />\n          Of course, feature requests and feedback are still appreciated.\n        </p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./Home.css\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nfunction Features() {\n  return (\n    <React.Fragment>\n      <div className=\"homeContainer\">\n        <h1 className=\"title1\">JAFT</h1>\n        <h4 className=\"title2\">Just Another Focus Timer</h4>\n        <br />\n\n        <Link to=\"/\" className=\"openButton\">\n          Back\n        </Link>\n\n        <h2 className=\"featureList\">Feature List</h2>\n        <p>\n          Email me at nichwch@gmail.com if you have feature requests. I'll add\n          it to the list if I like it.\n        </p>\n        <h3 className=\"title3\">Probably Happening</h3>\n        <ul>\n          <li>color coded tags</li>\n          <li>cloud backups</li>\n          <li>autocomplete for tag entry</li>\n          <li>change primary color</li>\n        </ul>\n        <h3 className=\"title3\">Maybe Happening</h3>\n        <ul>\n          <li>google calendar integration</li>\n          <li>slack integration?? idk</li>\n          <li>native desktop application (electron.js)</li>\n        </ul>\n        <h3 className=\"title3\">Forget About It</h3>\n        <ul>\n          <li>\n            Mobile (unless I figure an intuitive way to do selection on mobile)\n          </li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Features;\n","import React from \"react\";\nimport App from './App';\nimport Home from './Home/Home';\nimport Features from './Home/Features';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction Main()\n{\n  return(\n    <React.Fragment>\n      <Route path=\"/timer\" component={App} />\n      <Route path=\"/features\" component={Features} />\n      <Route path=\"/\" exact component={Home} />\n    </React.Fragment>\n  )\n}\n\nexport default Main\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\n\nReactDOM.render(<Router><Main /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}