{"version":3,"sources":["TimerUtils.js","Components/Timer/Timer.js","Components/Session/Session.js","Components/History/History.js","App.js","Home/Home.js","Home/Features.js","Main.js","serviceWorker.js","index.js"],"names":["getTimeDisplay","date","mode","hours","Math","floor","getTime","minutes","seconds","milliseconds","hourDisplay","minuteDisplay","secondDisplay","millisecondDisplay","toString","substring","Timer","require","props","Date","time","useState","tagFormValue","setTagFormValue","focusVal","setFocusVal","dateDisplay","sessionDisplay","stamps","length","stampStart","sessionLength","stamp","toggle","on","controls","stop","start","spaceToggle","e","code","useEffect","document","addEventListener","removeEventListener","className","currentTag","focus","onClick","name","window","confirm","reset","style","marginTop","tags","map","tag","i","key","setTag","removeTag","placeholder","value","onChange","target","type","checked","trim","newTag","addTag","Session","slice","initTime","set_currentTag","sortByMode","set_sortByMode","push","bars","timeTotals","Map","distractionArr","focusArr","has","arr","get","set","barDisplay","el","vis","width","backgroundColor","borderRightColor","visibility","tagArr","total","avg","reduce","acc","cv","distractionTotal","focusTotal","distractionAvg","focusAvg","infoContent","Fragment","infoDisplay","buttonDisplay","moment","themes","data","flavor_text","History","console","log","getComputedStyle","documentElement","getPropertyValue","sessions","setSessions","display","setDisplay","flavorText","set_flavorText","loadSessions","forage","iterate","val","iterationNumber","then","valObj","format","stopPropagation","removeItem","color","theme","setProperty","setTheme","localforage","TIMER","DEFAULT_TAGS","App","resetState","startTime","state","setState","setItem","index","splice","startTimer","valueOf","now","timer","setInterval","oldTag","pop","stopTimer","clearInterval","resetTimer","store","createInstance","this","getItem","content","prompt","alert","hash","random","substr","React","Component","Home","to","href","Features","Main","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75ec855e.chunk.js","sourcesContent":["const getTimeDisplay = (date,mode) =>\n{\n  //Is this elegant or hideous? I can't tell\n\n  let hours = Math.floor(date.getTime()/3600000);\n  let minutes = Math.floor((date.getTime()%3600000)/60000);\n  let seconds = Math.floor(((date.getTime()%3600000)%60000)/1000);\n  let milliseconds = Math.floor((((date.getTime()%3600000)%60000)%1000));\n\n  if(mode===\"numbers\")\n  {\n    let hourDisplay = \"\";\n    let minuteDisplay = \"\";\n    let secondDisplay = \"\";\n    let millisecondDisplay = \"\";\n\n\n    if(milliseconds>=10) millisecondDisplay = milliseconds.toString().substring(0,2);\n    else millisecondDisplay = \"0\"+milliseconds.toString();\n\n    if(minutes===0 && hours===0) secondDisplay = seconds.toString() + \":\";\n    else\n    {\n      if(seconds>=10) secondDisplay = seconds.toString() + \":\";\n      else secondDisplay = \"0\"+seconds.toString() + \":\";\n    }\n\n    if(hours===0) minuteDisplay = minutes.toString() + \":\";\n    else\n    {\n      if(minutes>=10) minuteDisplay = minutes.toString() + \":\";\n      else minuteDisplay = \"0\"+minutes.toString() + \":\";\n\n    }\n\n    hourDisplay = hours.toString() + \":\";\n\n    if(hours>0)\n    {\n      //don't display milliseconds (no space)\n      millisecondDisplay = \"\";\n      //get rid of trailing semicolon on seconds\n      if(seconds>=10) secondDisplay = seconds.toString();\n      else secondDisplay = \"0\"+seconds.toString();\n    }\n\n    //if hours is 0, don't show it\n    if(hours===0) hourDisplay = \"\";\n    //if minutes is 0, don't show it\n    if(minutes===0 && hours===0) minuteDisplay = \"\";\n\n    return \"\"+hourDisplay+minuteDisplay+secondDisplay+millisecondDisplay\n  }\n\n  else if(mode===\"text\")\n  {\n    let hourDisplay = \"\";\n    let minuteDisplay = \"\";\n    let secondDisplay = \"\";\n\n    if(hours===0) hourDisplay=\"\";\n    else if(hours===1) hourDisplay=`${hours} hour`;\n    else hourDisplay=`${hours} hours`;\n\n    if(minutes===0) minuteDisplay=\"\";\n    else if(minutes===1) minuteDisplay=`${minutes} minute`;\n    else minuteDisplay=`${minutes} minutes`;\n\n    if(seconds===0) secondDisplay=\"\";\n    else if(seconds===1) secondDisplay=`${seconds} second`;\n    else secondDisplay=`${seconds} seconds`;\n\n\n    if(hourDisplay!==\"\" && (minuteDisplay!==\"\" || secondDisplay!==\"\")) hourDisplay=hourDisplay+\", \";\n\n    if(minuteDisplay!==\"\" && secondDisplay!==\"\") minuteDisplay=minuteDisplay+\", \";\n\n    if(seconds===0 && minutes===0 && hours===0)\n    {\n      if(milliseconds===0) return \"0 seconds\";\n      return \"<1 second\";\n    }\n\n    return \"\"+hourDisplay+minuteDisplay+secondDisplay;\n  }\n\n  else if(mode===\"numbers_full\")\n  {\n    let hourDisplay = \"\";\n    let minuteDisplay = \"\";\n    let secondDisplay = \"\";\n\n\n    if(seconds>=10) secondDisplay = seconds.toString();\n    else secondDisplay = \"0\"+seconds.toString();\n\n    if(minutes>=10) minuteDisplay = minutes.toString() + \":\";\n    else minuteDisplay = \"0\"+minutes.toString() + \":\";\n\n    if(hours>=10) hourDisplay = hours.toString() + \":\";\n    else hourDisplay = \"0\"+hours.toString() + \":\";\n\n    return \"\"+hourDisplay+minuteDisplay+secondDisplay\n  }\n  else\n  {\n    return \"BAD_CALL\";\n  }\n\n}\n\n\n\nexport {getTimeDisplay}\n","import React,{useState,useEffect} from \"react\";\nimport \"./Timer.css\";\nimport {getTimeDisplay} from \"../../TimerUtils\";\n\nvar moment = require('moment');\n\nconst Timer = (props) =>\n{\n\n\n\n  let date = new Date(props.time);\n\n  let [tagFormValue,setTagFormValue] = useState(\"\");\n  //true means its a distraction, false means its not\n  let [focusVal,setFocusVal] = useState(false);\n\n  let dateDisplay = getTimeDisplay(date,\"numbers\");\n\n  let sessionDisplay = \"0:00\";\n  if(props.stamps.length > 0)\n  {\n    let stampStart = props.stamps[props.stamps.length-1];\n    let sessionLength = props.time - stampStart.stamp;\n\n    sessionDisplay = getTimeDisplay(new Date(sessionLength),\"numbers\");\n  }\n\n  let toggle = () => {\n    if(props.on) props.controls.stop();\n    else props.controls.start();\n  }\n\n  let spaceToggle = (e) => {\n     if(e.code === \"Space\")\n     {\n       toggle();\n       //doesn't work for some reason\n       // e.preventDefault();\n       // return false;\n     }\n   };\n\n  useEffect(()=>{\n    document.addEventListener(\"keyup\",spaceToggle);\n    return(\n      ()=>{\n        document.removeEventListener(\"keyup\",spaceToggle);\n      }\n    );\n  },[props.on]);\n\n\n  return (\n    <div className=\"innerAppContainer\">\n        <div className = {props.currentTag.focus?\"circleTimerContainer\":\"circleTimerContainer distracted\"} onClick={()=>{toggle()}}>\n            <div className = \"tagSubtitle\">\n              Total\n            </div>\n            <div className = \"tagSubtitle\">\n              {dateDisplay}\n            </div>\n            <div className = \"timerTime\">\n              {sessionDisplay}\n            </div>\n            <div className = \"tagTitle\">\n              {props.currentTag.name}\n            </div>\n            {props.currentTag.focus?null:\n            <div className = \"distractedTitle\">\n              DISTRACTED\n            </div>\n            }\n        </div>\n        {\n          ((!props.on)&&(props.time>0))?\n          <button className={props.currentTag.focus?\"resetButton\":\"resetButton distracted\"}\n          onClick=\n          {()=>{\n            if(window.confirm(\"Reset timer? This will erase this session's data.\"))\n            {\n              props.controls.reset()\n            }\n\n          }\n          }>\n          reset</button>\n          :\n          <div style={{marginTop:\"66px\"}}></div>\n        }\n        <div className=\"timerButtonContainer\">\n        {props.tags.map((tag,i)=>{return (\n          <span className=\"tagButtonCoupler\" key={i}>\n          <button className={tag.focus?\"tagButtonName\":\"tagButtonName distracted\"} key={i} onClick={()=>{props.setTag(tag)}}>\n            {tag.name}\n          </button>\n          <button\n            className={tag.focus?\"tagButtonDelete\":\"tagButtonDelete distracted\"}\n            onClick={\n              ()=>{\n                if(window.confirm(\"Delete this tag?\")) props.removeTag(i)\n              }\n            }\n\n          >X\n          </button>\n          </span>\n        )})}\n        <br/>\n        <input\n          className=\"tagForm\"\n          placeholder=\"add a new category...\"\n          value={tagFormValue}\n          onChange={(e)=>{setTagFormValue(e.target.value)}}\n        />\n        <span className=\"focusCheckBoxCaption\">\n        Distraction?\n        </span>\n        <input\n            type=\"checkbox\"\n            className={focusVal?\"focusCheckBox checked\":\"focusCheckBox\"}\n            checked={focusVal}\n            onChange={\n              (e)=>\n              {\n                setFocusVal(e.target.checked)\n              }\n            } />\n        <button className={props.currentTag.focus?\"submitTagForm\":\"submitTagForm distracted\"} onClick={\n          ()=>{\n            if(tagFormValue.trim().length>0)\n            {\n              let newTag = {\n                name:tagFormValue,\n                focus:!focusVal,\n              }\n              props.addTag(newTag);\n              setTagFormValue(\"\");\n            }\n          }\n        }>+</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Timer;\n","import React,{useState,useEffect} from \"react\";\nimport \"./Session.css\";\nimport {getTimeDisplay} from \"../../TimerUtils\";\n\nconst Session = (props) =>\n{\n  let stamps = props.stamps.slice();\n\n  // let [initTime,setInitTime] = useState(0);\n  // let [initTime,setInitTime] = useState(props.time);\n  let initTime = props.time;\n  let [currentTag,set_currentTag] = useState(\"\");\n\n  const NA = \"NA\";\n  const FOCUS = \"FOCUS\";\n  const DISTRACTIONS = \"DISTRACTIONS\";\n  const ALL = \"ALL\";\n\n  let [sortByMode,set_sortByMode] = useState(ALL);\n\n  // useEffect(\n  //   ()=>{\n  //   setInitTime(props.time);\n  // },[]\n  // );\n\n  if(stamps.length>0)\n  {\n    stamps.push(\n      {\n        tag:stamps[stamps.length-1].tag,\n        start:false,\n        stamp:initTime\n      }\n    )\n  }\n\n\n\n  let bars = [];\n\n  for(let i = 1; i<stamps.length;i+=2)\n  {\n    let start = stamps[i-1].stamp;\n    let end = stamps[i].stamp;\n    let length = end-start;\n    let name = stamps[i].tag.name;\n    let focus = stamps[i].tag.focus;\n    if(bars.length>0 && bars[bars.length-1].name === name) bars[bars.length-1].time+=length;\n    else if(length>0) bars.push({time:length,name:name,focus:focus});\n\n  }\n\n  let timeTotals = new Map();\n  let distractionArr = [];\n  let focusArr = [];\n\n  for(let i = 0; i<bars.length;i++)\n  {\n    if(timeTotals.has(bars[i].name))\n    {\n      let arr = timeTotals.get(bars[i].name);\n      arr.push(bars[i].time);\n      timeTotals.set(bars[i].name,arr);\n    }\n    else\n    {\n      timeTotals.set(bars[i].name,[bars[i].time]);\n    }\n    if(bars[i].focus) focusArr.push(bars[i].time);\n    else if(!bars[i].focus) distractionArr.push(bars[i].time);\n  }\n\n\n  let barDisplay = (<div className=\"barWrapper\">\n      {bars.map(\n          (el,i)=>{\n            let vis = \"visible\";\n\n            if(sortByMode===NA)\n            {\n              if(el.name===currentTag) vis = \"visible\";\n              else vis = \"hidden\";\n            }\n            else if(sortByMode===ALL) vis = \"visible\";\n            else if(sortByMode===FOCUS)\n            {\n              if(el.focus) vis = \"visible\";\n              else vis = \"hidden\";\n            }\n            else if(sortByMode===DISTRACTIONS)\n            {\n              if(!el.focus) vis = \"visible\";\n              else vis = \"hidden\";\n            }\n\n\n            return(<span key={i} className=\"barElement\" style={{width:\n              `calc(${(((el.time/initTime)*100)+\"% - 3px\")})`,\n              backgroundColor:(el.focus?\"var(--focus-color)\":\"var(--distracted-color)\"),\n              borderRightColor:(el.focus?\"var(--focus-hover)\":\"var(--distracted-hover)\"),\n              visibility:vis,\n              }}>\n\n              </span>\n            )\n          }\n        )}\n    </div>\n  )\n\n\n  let tagArr = timeTotals.get(currentTag);\n\n  let total = \"\";\n  let avg = \"\";\n  if(tagArr)\n  {\n    total = tagArr.reduce( (acc,cv)=>{ return acc+cv } );\n    avg = total/tagArr.length;\n  }\n\n  let distractionTotal,focusTotal = \"\";\n  let distractionAvg,focusAvg = \"\";\n\n  distractionTotal = distractionArr.reduce( (acc,cv)=>{ return acc+cv },0 );\n  distractionAvg = (distractionTotal/distractionArr.length)||0;\n\n  focusTotal = focusArr.reduce( (acc,cv)=>{ return acc+cv },0  );\n  focusAvg = (focusTotal/focusArr.length)||0;\n\n\n\n  let infoContent = null;\n\n  if(bars.length===0) infoContent = (<React.Fragment><p>No data (Timer not started)</p><br/><br/></React.Fragment>)\n  else if(sortByMode===ALL) infoContent = (<React.Fragment><p>Select a tag to view its information.</p><br/><br/></React.Fragment>)\n  else if(sortByMode===FOCUS)\n    infoContent = (\n      <React.Fragment>\n        <p>Displaying all focus sessions\n        <br/>Total Time: {getTimeDisplay(new Date(focusTotal),\"text\")}\n        <br/>Average Session Length: {getTimeDisplay(new Date(focusAvg),\"text\")}</p>\n      </React.Fragment>\n    )\n  else if(sortByMode===DISTRACTIONS)\n    infoContent = (\n      <React.Fragment>\n        <p>Displaying all distraction sessions\n        <br/>Total Time: {getTimeDisplay(new Date(distractionTotal),\"text\")}\n        <br/>Average Session Length: {getTimeDisplay(new Date(distractionAvg),\"text\")}</p>\n      </React.Fragment>\n    )\n  else if(sortByMode===NA)\n  {\n    infoContent = (\n      <React.Fragment>\n        <p>{currentTag}\n        <br/>Total Time: {getTimeDisplay(new Date(total),\"text\")}\n        <br/>Average Session Length: {getTimeDisplay(new Date(avg),\"text\")}</p>\n      </React.Fragment>\n    )\n  }\n\n  let infoDisplay = (\n    <React.Fragment>\n    {infoContent}\n    </React.Fragment>\n  )\n\n  let buttonDisplay = (\n    <React.Fragment>\n      <button\n           className={\"sessionTagButton\"}\n           onClick={\n             ()=>{\n               set_currentTag(\"\");\n               set_sortByMode(ALL);\n             }\n           }\n      >\n        Show All\n      </button>\n\n      <button\n           className={\"sessionTagButton\"}\n           onClick={\n             ()=>{\n               set_currentTag(\"\");\n               set_sortByMode(FOCUS);\n             }\n           }\n      >\n        Only Focus\n      </button>\n\n      <button\n           className={\"sessionTagButton distracted\"}\n           onClick={\n             ()=>{\n               set_currentTag(\"\");\n               set_sortByMode(DISTRACTIONS);\n             }\n           }\n      >\n        Only Distractions\n      </button>\n      <br/>\n      <br/>\n      {props.tags.map(\n        (tag,i)=>\n        {\n          if(timeTotals.has(tag.name))\n          {\n            return(\n            <button key={i}\n                 className={tag.focus?\"sessionTagButton\":\"sessionTagButton distracted\"}\n                 onClick={\n                   ()=>{\n                     set_currentTag(tag.name);\n                     set_sortByMode(NA);\n                   }\n                 }\n            >\n              {tag.name}\n            </button>\n            )\n          }\n          else return null;\n        }\n      )}\n    </React.Fragment>\n  )\n\n\n  return (\n    <React.Fragment>\n    <div className=\"barChartContainer\">\n    {barDisplay}\n    </div>\n    <div className=\"sessionInfoContainer\">\n    {infoDisplay}\n    </div>\n    <div className=\"sessionBottomContainer\">\n    {buttonDisplay}\n    </div>\n    </React.Fragment>\n  )\n}\n\nexport default Session;\n","import React,{useState,useEffect} from \"react\";\nimport Session from \"../Session/Session\";\nimport \"./History.css\";\n\nconst moment = require(\"moment\");\n\nconst themes =\n[\n\n    {\n      name:\"Default\",\n      data:[\n        [\"--transparent-grey\",\"rgba(30,30,30,0.8)\"],\n        [\"--focus-color\",\"#FF848B\"],\n        [\"--focus-hover\",\"#FF535B\"],\n        [\"--distracted-color\",\"#AC3539\"],\n        [\"--distracted-hover\",\"#960000\"],\n        [\"--field-gray\",\"#d6d6d6\"],\n        [\"--buttonSkin\",'rgba(150,150,150,0.8)'],\n        [\"--background\",'rgba(0,0,0,0)'],\n      ],\n      flavor_text:\"Classic JAFT.\",\n    },\n    {\n      name:\"Coffee Shop\",\n      data:[\n        [\"--transparent-grey\",\"rgba(30,30,30,0.8)\"],\n        [\"--focus-color\",\"#c7fac3\"],\n        [\"--focus-hover\",\"#b5e3b1\"],\n        [\"--distracted-color\",\"#82a37f\"],\n        [\"--distracted-hover\",\"#668063\"],\n        [\"--field-gray\",\"#d6d6d6\"],\n        [\"--buttonSkin\",'url(/woodtexture.jpg)'],\n        [\"--background\",'url(/coffee_shop.gif)'],\n      ],\n      flavor_text:\"Coffee Shop Vibes. Pair with a nice jazz or lofi playlist.\",\n    },\n    {\n      name:\"Vaporwave\",\n      data:[\n        [\"--transparent-grey\",\"rgba(30,30,30,0.8)\"],\n        [\"--focus-color\",\"#b94aec\"],\n        [\"--focus-hover\",\"#8234a6\"],\n        [\"--distracted-color\",\"#a175b5\"],\n        [\"--distracted-hover\",\"#593b75\"],\n        [\"--field-gray\",\"#d6d6d6\"],\n        [\"--buttonSkin\",\"rgba(150,150,150,0.8)\"],\n        [\"--background\",'url(/vaporwave1.gif)'],\n      ],\n      flavor_text:\"v a p o r w a v e a e s t h e t i c s\",\n    },\n]\n\nconst setTheme = (theme) =>\n{\n  let style = document.documentElement.style;\n\n  for(let i=0;i<theme.data.length;i++)\n  {\n      style.setProperty(theme.data[i][0], theme.data[i][1]);\n  }\n}\n\n\n\nconst History = (props) =>\n{\n  console.log(\"STYLLEEE\",getComputedStyle(document.documentElement)\n    .getPropertyValue('--background'));\n  let [sessions,setSessions] = useState([]);\n  let [display,setDisplay] = useState(null);\n  let [flavorText, set_flavorText] = useState(\"\");\n\n  const loadSessions = ()=>{\n    let arr = [];\n    props.forage.iterate(\n      (val,key,iterationNumber)=>\n      {\n        if(key===\"tags\") return;\n        arr.push(\n          {\n            name:val.name,\n            stamps:val.stamps,\n            date:val.date,\n            time:val.time,\n            tags:val.tags,\n            key:key,\n          }\n        );\n      }\n    ).then(\n      ()=>{setSessions(arr);}\n    )\n  }\n\n  useEffect(()=>{\n    loadSessions();\n  },[props.forage]);\n\n\n\n  return (\n    <React.Fragment>\n    {\n      display===null?\n      <React.Fragment>\n      <div className=\"historyContainer\">\n        {\n          sessions.map(\n            (valObj,i) =>\n            {\n              let date = moment(valObj.date).format(\"dddd, MM/DD/YYYY, h:mm a\");\n              return(\n                <div key={i}\n                        className=\"sessionListing\"\n                        onClick={\n                          ()=>{\n                            setDisplay(valObj)\n                          }\n                        }\n                >\n                  <div>\n                  <span className=\"listingTitle\">\n                  {valObj.name}\n                  </span>\n                  <button className=\"listingDeleteButton\"\n                  onClick={\n                    (e)=>{\n                      e.stopPropagation();\n                      if(window.confirm(\"Are you sure? This cannot be undone\"))\n                        {\n                          props.forage.removeItem(valObj.key)\n                          .then(\n                            ()=>{\n                            loadSessions();\n                            }\n                          )\n                        }\n                      }\n\n                  }\n                  >\n                  X\n                  </button>\n                  <br/>\n                  <span>{date}</span>\n                  </div>\n\n                </div>\n              )\n\n            }\n          )\n        }\n        {sessions.length>0?null:<p style={{color:\"white\"}}>No past sessions to show.</p>}\n      </div>\n      <div className=\"settingsContainer\">\n        <h1>Themes</h1>\n        <p>{flavorText}</p>\n        {\n          themes.map((theme,i)=>{\n            return(\n              <button\n                key={i}\n                onClick={\n                  ()=>{\n                    setTheme(theme)\n                    set_flavorText(theme.flavor_text)\n                  }\n                }\n              >\n              {theme.name}\n              </button>\n            )\n          })\n        }\n      </div>\n      </React.Fragment>\n      :\n      <React.Fragment>\n        <div className = \"historyBar\">\n        <button className = \"barBackButton\" onClick={()=>{setDisplay(null)}}>\n        back\n        </button>\n        <br/>\n        <div className=\"barTitle\">\n        {display.name}\n        </div>\n        <div className=\"barSubtitle\">\n        {moment(display.date).format(\"MM/DD/YYYY, h:mm a\")}\n        </div>\n        </div>\n        <Session\n          stamps={display.stamps}\n          time={display.time}\n          tags={display.tags}\n        />\n      </React.Fragment>\n    }\n\n    </React.Fragment>\n  )\n}\n\nexport default History;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Timer from \"./Components/Timer/Timer\";\nimport Session from \"./Components/Session/Session\";\nimport History from \"./Components/History/History\";\n\nconst localforage = require(\"localforage\");\nconst moment = require(\"moment\");\n\nconst TIMER = \"TIMER\";\nconst SESSION = \"SESSION\";\nconst HISTORY = \"HISTORY\";\n\nconst DEFAULT_TAGS = [\n    {\n      name:\"Focus\",\n      focus:true,\n    },\n    {\n      name:\"FB\",\n      focus:false,\n    },\n    {\n      name:\"Twitter\",\n      focus:false,\n    },\n    {\n      name:\"Medium\",\n      focus:false,\n    },\n];\n\n\nclass App extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = this.resetState();\n    this.state.tags = []\n    this.state.currentTag = {name:\"Focus\",focus:true,};\n    this.state.mode = TIMER;\n\n    var store = localforage.createInstance({\n      name: \"JAFT\"\n    });\n    this.state.forage = store;\n\n\n    console.log(this.state.forage);\n  }\n\n  componentDidMount()\n  {\n    this.state.forage.getItem(\"tags\")\n    .then(\n      (value)=>{\n        console.log(\"TTAAAGS\",value);\n        if(value!==null) this.setState({tags:value});\n        else this.setState({tags:DEFAULT_TAGS});\n\n      }\n    )\n  }\n\n\n  resetState = () =>{\n    return(\n      {\n        startTime:0,\n        time:0,\n        on:false,\n        stamps:[],\n      }\n    );\n  }\n\n  addTag = (newTag) =>{\n    let tags = this.state.tags;\n    tags.push(newTag);\n    this.setState({\n      tags:tags\n    },\n    ()=>{\n      this.state.forage.setItem(\"tags\",this.state.tags);\n    }\n  );\n  }\n\n  removeTag = (index)=>{\n    let tags = this.state.tags;\n    tags.splice(index,1);\n    this.setState({\n      tags:tags\n    },\n    ()=>{\n      this.state.forage.setItem(\"tags\",this.state.tags);\n    });\n  }\n\n  //not idempotent\n  startTimer = () =>\n  {\n    console.log(\"START\");\n    let stamps;\n    if(this.state.time == 0)\n    {\n      stamps = this.state.stamps;\n      stamps.push({tag:this.state.currentTag,start:true,stamp:this.state.time.valueOf()});\n\n      this.setState({\n        stamps:stamps,\n        currentTag:this.state.currentTag\n      });\n    }\n    this.setState({\n      startTime:Date.now()-this.state.time,\n      time:this.state.time,\n      on:true,\n    });\n    this.timer = setInterval(()=>{\n      //useful millisecond values to add on for testing\n      //35990000 (9 hours 59 minutes 50 seconds)\n      //590000 (9 minutes 50 seconds)\n      this.setState({\n        time:moment(Date.now()).valueOf() - moment(this.state.startTime).valueOf(),\n      });\n    },1);\n  }\n\n\n  setTag = (newTag) =>\n  {\n    let oldTag = this.state.currentTag;\n    if(oldTag.name!==newTag.name || oldTag.focus!==newTag.focus)\n    {\n      let stamps = this.state.stamps;\n\n      if(!this.state.on)\n      {\n        console.log(stamps);\n        if(stamps.length === 0)\n        {\n          this.setState({\n            currentTag:newTag\n          });\n          return;\n        }\n        else if(stamps[stamps.length-1].stamp === this.state.time)\n        {\n          stamps.pop();\n          stamps.push({tag:newTag,start:true,stamp:this.state.time});\n          this.setState({\n            stamps:stamps,\n            currentTag:newTag\n          },()=>{console.log(stamps)});\n          return;\n        }\n\n      }\n      //close the previous tag\n      stamps.push({tag:oldTag,start:false,stamp:this.state.time});\n      //open the new tag\n      stamps.push({tag:newTag,start:true,stamp:this.state.time});\n\n      this.setState({\n        stamps:stamps,\n        currentTag:newTag\n      },()=>{console.log(stamps,this.state.time)});\n    }\n\n  }\n\n  //idempotent\n  stopTimer = () => {\n    console.log(\"STOP\");\n    this.setState({\n      on:false,\n    })\n    clearInterval(this.timer);\n  }\n\n  resetTimer = () => {\n    this.setState(this.resetState());\n  }\n\n\n  render()\n  {\n    let content = (<React.Fragment>\n      <Timer\n      controls={{start:this.startTimer,stop:this.stopTimer,reset:this.resetTimer}}\n      time={this.state.time}\n      on={this.state.on}\n      tags={this.state.tags}\n      stamps={this.state.stamps}\n      setTag={this.setTag}\n      removeTag={this.removeTag}\n      addTag={this.addTag}\n      currentTag={this.state.currentTag}\n      />\n      </React.Fragment>);\n    if(this.state.mode===TIMER)\n    {\n      content = content;\n    }\n    else if(this.state.mode===SESSION)\n    {\n      content = (<React.Fragment>\n                    <Session\n                      stamps={this.state.stamps}\n                      time={this.state.time}\n                      tags={this.state.tags}\n                    />\n                 </React.Fragment>);\n    }\n    else if(this.state.mode===HISTORY)\n    {\n      content = (<React.Fragment><History forage={this.state.forage}/></React.Fragment>);\n    }\n    return (<React.Fragment>\n      <div className=\"background\">\n      </div>\n      <div className=\"appContainer\">\n        <div className=\"appNav\">\n          <button className={this.state.mode===TIMER?\"leftNav selected\":\"leftNav\"} onClick={()=>{this.setState({mode:TIMER})}}>\n            Timer\n          </button>\n          <button className={this.state.mode===SESSION?\"centralNav selected\":\"centralNav\"} onClick={()=>{this.setState({mode:SESSION})}}>\n            Session\n          </button>\n          <button className={this.state.mode===HISTORY?\"centralNav selected\":\"centralNav\"} onClick={()=>{this.setState({mode:HISTORY})}}>\n            History\n          </button>\n          <button className=\"rightNav\"\n          onClick={\n            ()=>{\n              this.stopTimer();\n              var name = window.prompt(\"Enter a name for your session. Note: This will end your session.\");\n              if(name===null) return;\n              else if(name.trim().length===0)\n              {\n                window.alert(\"Please enter a full name\");\n              }\n              else\n              {\n                let hash = Math.random()\n                  .toString(36)\n                  .substr(2, 9);\n\n                this.state.forage.setItem(hash,\n                  {\n                    name:name,\n                    stamps:this.state.stamps,\n                    date:new Date(),\n                    time:this.state.time,\n                    tags:this.state.tags\n                  }\n                )\n                this.resetTimer();\n              }\n\n\n              //needed params\n              // name\n              // stamps={this.state.stamps}\n              // time={this.state.time}\n              // tags={this.state.tags}\n            }\n          }\n\n          >\n            Save\n          </button>\n        </div>\n\n        {content}\n      </div>\n      </React.Fragment>)\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./Home.css\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      <div className=\"homeContainer\">\n        <h1 className=\"title1\">JAFT</h1>\n        <h4 className=\"title2\">Just Another Focus Timer</h4>\n        <br />\n\n        <Link to=\"/timer\" className=\"openButton\">\n          Open App\n        </Link>\n        <span className=\"homeTagContainer\">\n          <span className=\"homeTags\">\n            <a\n              href=\"https://medium.com/@nichwch/what-is-yana-80651554c159?source=your_stories_page---------------------------\"\n              className=\"homeTagLink\"\n            >\n              design philosophy\n            </a>\n          </span>\n          <span className=\"homeTags\">\n            <a\n              href=\"https://medium.com/@nichwch/making-yana-e3fade3f56e7\"\n              className=\"homeTagLink\"\n            >\n              making JAFT\n            </a>\n          </span>\n          {/*<span className=\"homeTags\">\n            <Link to=\"/features\" className=\"homeTagLink\">\n              planned features\n            </Link>\n          </span>*/}\n          <span className=\"homeTags\">\n            <a href=\"https://nichwch.github.io/\" className=\"homeTagLink\">\n              my website\n            </a>\n          </span>\n          <span className=\"homeTags\">\n            <a href=\"mailto:nichwch@gmail.com\" className=\"homeTagLink\">\n              contact me\n            </a>\n          </span>\n        </span>\n        <h3 className=\"title3\">JAFT is for staying focused</h3>\n        <p>\n          Use the timer to stay mindful of when you're focused, and when you're distracted. Use the scratch area to put down any temporary thoughts.\n        </p>\n        <h3 className=\"title3\">JAFT is lenient</h3>\n        <p>\n          \"Focus\" apps that block distractions don't work. The internet is full of distractions, but it's also a useful tool.\n          <br/><br/>\n          Say you're a writer doing research. How is your blocker going to distinguish between articles you're using for research, and articles you're being\n          distracted by? The low-hanging fruit is to block Facebook, Reddit, your obvious culprits. But what if you're wasting your time reading long-form\n          New Yorker articles that, while interesting, have nothing to do with the article you're writing?\n          <br/><br/>\n          A better solution is to be mindful of <b>when</b> you're distracted.\n        </p>\n\n        <h3 className=\"title3\">JAFT is your mental \"RAM\"</h3>\n        <p>\n          Longform thoughts belong in your notebook, short but clever thoughts belong on your twitter. Plans and schedules belong in your planner.\n          <br/><br/>\n          What about \"scratch\" thoughts? You're working on a project, and you've thought out a few tasks you think you should knock out.\n          Where do you write them down? It wouldn't make sense to clutter your journal with scratch-work. The notes app on your Mac would work for \"scratch\" thoughts,\n          But, you might be scribbling down phone numbers, reminders, shopping lists there already - it'd be nice to have\n          a place just for your scratch work.\n          <br/><br/>\n          Here's an analogy for you. Your notebook/planner is your <b>Hard Drive</b>, JAFT is your <b>Random Access Memory</b>. In other words, it's a place for you\n          to write down things you don't neccessarily need to hold on to long-term. Think of it as mental scratch paper, built right into your focus timer.\n        </p>\n\n        <h3 className=\"title3\">JAFT is for me</h3>\n        <p>\n          I struggle with staying focused. So, I made this app to help myself with that.\n          <br />\n          <br />\n          This is <b>my</b> focus timer. The design choices will be weird\n          because it's being designed for me and my idiosyncrasies. Just keep\n          that in mind.\n          <br />\n          <br />\n          Of course, feature requests and feedback are still appreciated.\n        </p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./Home.css\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nfunction Features() {\n  return (\n    <React.Fragment>\n      <div className=\"homeContainer\">\n        <h1 className=\"title1\">JAFT</h1>\n        <h4 className=\"title2\">Just Another Focus Timer</h4>\n        <br />\n\n        <Link to=\"/\" className=\"openButton\">\n          Back\n        </Link>\n\n        <h2 className=\"featureList\">Feature List</h2>\n        <p>\n          Email me at nichwch@gmail.com if you have feature requests. I'll add\n          it to the list if I like it.\n        </p>\n        <h3 className=\"title3\">Probably Happening</h3>\n        <ul>\n          <li>color coded tags</li>\n          <li>cloud backups</li>\n          <li>autocomplete for tag entry</li>\n          <li>change primary color</li>\n        </ul>\n        <h3 className=\"title3\">Maybe Happening</h3>\n        <ul>\n          <li>google calendar integration</li>\n          <li>slack integration?? idk</li>\n          <li>native desktop application (electron.js)</li>\n        </ul>\n        <h3 className=\"title3\">Forget About It</h3>\n        <ul>\n          <li>\n            Mobile (unless I figure an intuitive way to do selection on mobile)\n          </li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Features;\n","import React from \"react\";\nimport App from './App';\nimport Home from './Home/Home';\nimport Features from './Home/Features';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction Main()\n{\n  return(\n    <React.Fragment>\n      <Route path=\"/timer\" component={App} />\n      <Route path=\"/features\" component={Features} />\n      <Route path=\"/\" exact component={Home} />\n    </React.Fragment>\n  )\n}\n\nexport default Main\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\n\nReactDOM.render(<Router><Main /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}